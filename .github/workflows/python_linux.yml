name: PyQBDI Linux package

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        QBDI_ARCH: ['X86_64', 'X86']
      fail-fast: false
    env:
      QBDI_PLATFORM: 'linux'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Cache ccache
        uses: actions/cache@v4
        id: cache-ccache
        with:
          path: |
            ~/.ccache
          key: ccache-pyqbdi-linux-${{ matrix.QBDI_ARCH }}-${{ hashFiles('.github/workflows/ccache.conf') }}-${{ github.run_number }}
          restore-keys: |
            ccache-pyqbdi-linux-${{ matrix.QBDI_ARCH }}-${{ hashFiles('.github/workflows/ccache.conf') }}-
      - if: steps.cache-ccache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.ccache
          cp .github/workflows/ccache.conf ~/.ccache/ccache.conf
      - name: Cache third-party
        uses: actions/cache@v4
        with:
          path: |
            third-party
          key: QBDI-third-party-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('**/*.cmake') }}
      - name: Create build image
        env:
          QBDI_ARCH: ${{ matrix.QBDI_ARCH }}
        run: bash ./docker/ci_python_linux/img_build.sh
      - name: Build Wheel for python ${{ matrix.python-version }}
        env:
          QBDI_ARCH: ${{ matrix.QBDI_ARCH }}
        run: bash ./docker/ci_python_linux/whl_build.sh ${{ matrix.python-version }}
      - name: Export wheel ${{ matrix.python-version }}
        uses: actions/upload-artifact@v4
        with:
          name: PyQBDI_linux_${{ matrix.QBDI_ARCH }}_python_${{ matrix.python-version }}
          path: outwheel/*

